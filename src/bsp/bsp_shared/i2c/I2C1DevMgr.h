/*****************************************************************************
* Model: I2C1DevMgr.qm
* File:  ./I2C1DevMgr_gen.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${.::I2C1DevMgr_gen.h} ...................................................*/
/**
 * @file    I2C1DevMgr.h
 * @brief   Declarations for functions for the I2C1DevMgr AO.
 * This state machine handles any device that is attached to the I2C1 bus.
 * This AO doesn't handle the low level I2C commands and instead communicates
 * with I2CBusMgr AO to send the events that kick off the low level I2C cmds.
 * The rationale behind this is that different I2C devices require different
 * I2C commands in different order.  Some EEPROMs request 2 Start bits, some
 * other devices have different timeouts for their write/read commands. This
 * way, the I2C bus logic can stay common and any device differences are
 * handled in the device specific AOs.
 *
 * @note 1: If editing this file, please make sure to update the I2C1DevMgr.qm
 * model.  The generated code from that model should be very similar to the
 * code in this file.
 *
 * @date    10/24/2014
 * @author  Harry Rostovtsev
 * @email   harry_rostovtsev@datacard.com
 * Copyright (C) 2014 Datacard. All rights reserved.
 *
 * @addtogroup groupI2C
 * @{
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef I2C1DEVMGR_H_
#define I2C1DEVMGR_H_

/* Includes ------------------------------------------------------------------*/
#include "qp_port.h"                                        /* for QP support */
#include "Shared.h"                                   /*  Common Declarations */
#include "i2c.h"                               /* For I2C device declarations */

/* Exported defines ----------------------------------------------------------*/
#define MAX_BUS_RETRIES   100 /**< Max number of retries for I2C bus for busy flag */
#define MAX_I2C_TIMEOUT 10000 /**< Max number of retries for I2C bus for busy flag */
/* Exported macros -----------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/

/**
 * \struct Event struct type for transporting I2C data.
 */
/*${Events::I2CDataEvt} ....................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< Which I2C device data is from. */
    I2C_Device_t i2cDevice;

    /**< Buffer that holds the data. */
    char bufData[MAX_MSG_LEN];

    /**< Length of data in the buffer. */
    uint16_t wDataLen;

    /**< Address on the I2C device read/written to. */
    uint16_t wAddr;
} I2CDataEvt;

/**
 * \struct Event struct type for requesting I2C data reads and notifying of finished
 * writes.
 */
/*${Events::I2CEvt} ........................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< Which I2C device is being accessed. */
    I2C_Device_t i2cDevice;

    /**< Address on the I2C device. */
    uint16_t wAddr;

    /**< Number of bytes to read/written from I2C device. */
    uint16_t wDataLen;
} I2CEvt;


/* Exported constants --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

/**
 * @brief C "constructor" for I2C1DevMgr "class".
 * Initializes all the timers and queues used by the AO, sets up a deferral
 * queue, and sets of the first state.
 * @param [in]: none.
 * @retval: none
 */
/*${AOs::I2C1DevMgr_ctor} ..................................................*/
void I2C1DevMgr_ctor(void);


/**< "opaque" pointer to the Active Object */
extern QActive * const AO_I2C1DevMgr;


/**
 * @} end addtogroup groupI2C
 */
#endif                                                       /* I2C1DEVMGR_H_ */
/******** Copyright (C) 2014 Datacard. All rights reserved *****END OF FILE****/
