/*****************************************************************************
* Model: SerialMgr.qm
* File:  ./SerialMgr_gen.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${.::SerialMgr_gen.h} ....................................................*/
/**
 * @file    SerialMgr.h
 * Declarations for functions for the SerialMgr AO.  This state
 * machine handles all output to the serial port
 *
 * Note: If editing this file, please make sure to update the CommStackMgr.qm
 * model.  The generated code from that model should be very similar to the
 * code in this file.
 *
 * @date    06/02/2014
 * @author  Harry Rostovtsev
 * @email   harry_rostovtsev@datacard.com
 * Copyright (C) 2014 Datacard. All rights reserved.
 */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef SERIALMGR_H_
#define SERIALMGR_H_

/* Includes ------------------------------------------------------------------*/
#include "qp_port.h"                                        /* for QP support */
#include "Shared.h"                                   /*  Common Declarations */

/* Exported types ------------------------------------------------------------*/

/**
 * \struct Event struct type for transporting serial data.
 */
/*${Events::SerialDataEvt} .................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< Buffer that holds the data. */
    char buffer[MAX_MSG_LEN];

    /**< Length of data in the buffer. */
    uint16_t wBufferLen;
} SerialDataEvt;


/* Exported constants --------------------------------------------------------*/
/* Exported macro ------------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

/**
 * @brief C "constructor" for SerialMgr "class".
 * Initializes all the timers and queues used by the AO, sets up a deferral
 * queue, and sets of the first state.
 * @param  None
 * @param  None
 * @retval None
 */
/*${AOs::SerialMgr_ctor} ...................................................*/
void SerialMgr_ctor(void);


/**< "opaque" pointer to the Active Object */
extern QActive * const AO_SerialMgr;


#endif                                                        /* SERIALMGR_H_ */
/******** Copyright (C) 2014 Datacard. All rights reserved *****END OF FILE****/
