/*****************************************************************************
* Model: LWIPMgr.qm
* File:  ./LWIPMgr_gen.h
*
* This file has been generated automatically by QP Modeler (QM).
* DO NOT EDIT THIS FILE MANUALLY.
*
* Please visit www.state-machine.com/qm for more information.
*****************************************************************************/
/**
 * @file     LWIPMgr.h
 * This file contains the declarations of the LWIPMgr Active Object and its
 * state machines.
 *
 * Note: If editing this file, please make sure to update the LWIPMgr.qm
 * model.  The generated code from that model should be very similar to the
 * code in this file.
 *
 * @date       06/09/2014
 * @author     Harry Rostovtsev
 * @email      harry_rostovtsev@datacard.com
 * Copyright (C) 2014 Datacard. All rights reserved.
 */
#ifndef LWIPMGR_H_
#define LWIPMGR_H_

#include "qp_port.h"                                        /* for QP support */
#include "project_includes.h"           /* Includes common to entire project. */

/*! \enum LWIPMgrSignals
 * Signals used by LWIPMgr.  These should start from MAX_SHARED_SIG
 */
enum LWIPMgrSignals {
   ETH_SEND_SIG = MAX_SHARED_SIG,
   MAX_PUB_SIG,                                  /* the last published signal */
};

/* @(/1/0) .................................................................*/
/** 
* These events types are responsible for getting data from Eth driver to LWIPMgr.
*/
typedef struct EthEvtTag {
/* protected: */
    QEvt super;
    /** 
    * Where the msg came from so it can be routed
    * back to the sender.
    */
    MsgSrc msg_src;
    /** 
    * Length of the msg buffer
    */
    uint16_t msg_len;
    /** 
    * Buffer that holds the data of the msg.
    */
    char msg[MAX_MSG_LEN];
} EthEvt;


/* @(/2/2) .................................................................*/
/** 
* This function is a C "constructor" for this active object.
*/
void LWIPMgr_ctor(void);

/** 
* "opaque" pointer to the Active Object
*/
extern QActive * const AO_LWIPMgr;

/**
  * This function is the implementation of a stub function in CommStackMgr.  It
  * is used to do the actual sending of data over ethernet on the embedded side.
  * The simulator will have its own implementation of this function due to the
  * use of totally different ip stacks and threading paradigms.
  *
  * @param  e: a MsgEvt const event pointer to the MsgEvt that contains the
  * length and message to be sent.
  *
  * @return None
  */
void ETH_SendMsg_Handler(MsgEvt const *e);

#endif                                                          /* LWIPMGR_H_ */
/******** Copyright (C) 2014 Datacard. All rights reserved *****END OF FILE****/
