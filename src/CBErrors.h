/**
 * @file 	CBErrors.h
 * @brief   Contains all the error codes that can be generated by the board
 *
 * @date   	05/28/2014
 * @author 	Harry Rostovtsev
 * @email  	harry_rostovtsev@datacard.com
 * Copyright (C) 2014 Datacard. All rights reserved.
 *
 * @addtogroup groupApp
 * @{
 *
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef CBERRORS_H_
#define CBERRORS_H_

/* Includes ------------------------------------------------------------------*/
/* Exported defines ----------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/

/**
 * @enum Error codes that can be generated by this board.
 *
 * The error code consists of a 32 bit value:
 *
 * The most significant 16 bits map to the category.
 * The least significant 16 bits map to low level errors as you see fit.
 *
 * For example:
 * Error code - 0x00000004
 * Category   - 0x0000: This is the serial communications category
 * Error      - 0x0004: This is the low level error code that the board can
 * specify.  Each category gets 0xFFFF error codes (65535) dedicated to it.
 *
 */
typedef enum CBErrors
{
   ERR_NONE                                                    = 0x00000000,

   /* HW error category.                         0x00000001 - 0x0000FFFF */
   ERR_SERIAL_HW_TIMEOUT                                       = 0x00000001,
   ERR_SERIAL_MSG_TOO_LONG                                     = 0x00000002,
   ERR_SERIAL_MSG_BASE64_ENC_FAILED                            = 0x00000003,
   ERR_STM32_HW_CRYPTO_FAILED                                  = 0x00000004,

   /* Reset error category                       0x00020000 - 0x0002FFFF */
   ERR_LOW_POWER_RESET                                         = 0x00020000,
   ERR_WINDOW_WATCHDOG_RESET                                   = 0x00020001,
   ERR_INDEPENDENT_WATCHDOG_RESET                              = 0x00020002,
   ERR_SOFTWARE_RESET                                          = 0x00020003,
   ERR_POR_PDR_RESET                                           = 0x00020004,
   ERR_PIN_RESET                                               = 0x00020005,
   ERR_BOR_RESET                                               = 0x00020006,

   /* NOR error category                         0x00030000 - 0x0003FFFF */
   ERR_NOR_ERROR                                               = 0x00030000,
   ERR_NOR_TIMEOUT                                             = 0x00030001,
   ERR_NOR_BUSY                                                = 0x00030002,

   /* COMM error category                        0x00040000 - 0x0004FFFF */
   ERR_COMM_UNKNOWN_MSG_SOURCE                                 = 0x00040000,
   ERR_COMM_INVALID_MSG_LEN                                    = 0x00040001,
   ERR_COMM_UNIMPLEMENTED_MSG                                  = 0x00040002,

   /* MENU error category                        0x00050000 - 0x0005FFFF */
   ERR_MENU_NODE_STORAGE_ALLOC_NULL                            = 0x00050000,
   ERR_MENU_TEXT_STORAGE_ALLOC_NULL                            = 0x00050001,
   ERR_MENU_UNKNOWN_CMD                                        = 0x00050002,
   ERR_MENU_CURRENT_NODE_NULL                                  = 0x00050003,
   ERR_MENU_CMD_NOT_FOUND_AT_THIS_MENU                         = 0x00050004,

   /* Reserved errors                            0xFFFFFFFE - 0xFFFFFFFF */
   ERR_UNIMPLEMENTED                                           = 0xFFFFFFFE,
   ERR_UNKNOWN                                                 = 0xFFFFFFFF
} CBErrorCode;

/* Exported constants --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

/**
 * @}
 * end addtogroup groupApp
 */
#endif                                                         /* CBERRORS_H_ */
/******** Copyright (C) 2014 Datacard. All rights reserved *****END OF FILE****/
